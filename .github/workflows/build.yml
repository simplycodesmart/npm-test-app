# Workflow name
name: Build, Test, SonarCloud Analysis, and Deploy

# Event triggers
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]

# Permissions required
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  npm-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    if: ${{ github.ref == 'refs/heads/master' }}
    # needs:
    #   - deploy-storybook # Assuming 'quality' job is defined elsewhere

    strategy:
      matrix:
        node-version: ["20.13.1"] # Add other Node.js versions if needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Yarn
        run: corepack enable && corepack prepare yarn@stable --activate

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Configure npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Build Angular library
        run: yarn build # Adjust script if needed

      - name: Semantic release
        run: yarn semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package to npm
        run: yarn publish  --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          generate_release_notes: true
